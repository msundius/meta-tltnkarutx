--- a/drivers/net/ethernet/qualcomm/essedma/edma_ethtool.c
+++ b/drivers/net/ethernet/qualcomm/essedma/edma_ethtool.c
@@ -25,6 +25,38 @@
 
 #define EDMA_STAT(m)    offsetof(struct edma_ethtool_statistics, m)
 #define DRVINFO_LEN	32
+
+/* Phy medium type */
+typedef enum {
+	QCA8075_PHY_MEDIUM_COPPER = 0,
+	QCA8075_PHY_MEDIUM_FIBER = 1, /**< Fiber */
+	QCA8075_PHY_MEDIUM_NULL = 2 /**< NULL */
+} qca8075_phy_medium_t;
+
+#define	COMBO_PHY_ID	4
+
+/*
+ * For auto media detection
+ */
+
+#define	COMBO_PHY_ID	4
+#define QCA8075_PHY_CHIP_CONFIG		0x1f	/* Chip Configuration Register  */
+
+#define QCA8075_PHY_PSGMII_BASET		0x0
+#define QCA8075_PHY_PSGMII_BX1000	0x1
+#define QCA8075_PHY_PSGMII_FX100		0x2
+#define QCA8075_PHY_PSGMII_AMDET		0x3
+#define QCA8075_PHY_SGMII_BASET		0x4
+
+#define QCA8075_PHY_SGMII_STATUS		0x1a	/* sgmii_status  Register  */
+#define QCA8075_PHY4_AUTO_SGMII_SELECT	0x40
+#define QCA8075_PHY4_AUTO_COPPER_SELECT	0x20
+#define QCA8075_PHY4_AUTO_BX1000_SELECT	0x10
+#define QCA8075_PHY4_AUTO_FX100_SELECT	0x8
+
+#define QCA8075_PHY4_PREFER_FIBER	0x400
+#define PHY4_PREFER_COPPER		0x0
+#define PHY4_PREFER_FIBER		0x1
 
 /* Array of strings describing statistics
  */
@@ -176,6 +208,61 @@
 	return 0;
 }
 
+static qca8075_phy_medium_t __phy_prefer_medium_get(struct mii_bus * bus,
+                                                   u32 phy_id)
+{
+	u16 phy_medium;
+	phy_medium =
+			mdiobus_read(bus, phy_id, QCA8075_PHY_CHIP_CONFIG);
+
+	return ((phy_medium & QCA8075_PHY4_PREFER_FIBER) ?
+		QCA8075_PHY_MEDIUM_FIBER : QCA8075_PHY_MEDIUM_COPPER);
+}
+
+/*
+ *  phy4 activer medium
+ *  get phy4 current active medium, fiber or copper;
+ */
+static qca8075_phy_medium_t __phy_active_medium_get(struct mii_bus * bus,
+                                                   u32 phy_id)
+{
+	u16 phy_data = 0;
+	u32 phy_mode;
+
+	phy_mode = mdiobus_read(bus, phy_id, QCA8075_PHY_CHIP_CONFIG);
+	//phy_mode = qca8075_phy_reg_read(dev_id, phy_id, QCA8075_PHY_CHIP_CONFIG);
+	phy_mode &= 0x000f;
+
+
+	if (phy_mode == QCA8075_PHY_PSGMII_AMDET) {
+		phy_data = mdiobus_read(bus,
+			phy_id, QCA8075_PHY_SGMII_STATUS);
+
+		if ((phy_data & QCA8075_PHY4_AUTO_COPPER_SELECT)) {
+			return QCA8075_PHY_MEDIUM_COPPER;
+		} else if ((phy_data & QCA8075_PHY4_AUTO_BX1000_SELECT)) {
+			/* PHY_MEDIUM_FIBER_BX1000 */
+			return QCA8075_PHY_MEDIUM_FIBER;
+		} else if ((phy_data & QCA8075_PHY4_AUTO_FX100_SELECT)) {
+			 /* PHY_MEDIUM_FIBER_FX100 */
+			return QCA8075_PHY_MEDIUM_FIBER;
+		}
+		/* link down */
+		return __phy_prefer_medium_get(bus, phy_id);
+
+	} else if ((phy_mode == QCA8075_PHY_PSGMII_BASET) || (phy_mode == QCA8075_PHY_SGMII_BASET)) {
+
+		return QCA8075_PHY_MEDIUM_COPPER;
+
+	} else if ((phy_mode == QCA8075_PHY_PSGMII_BX1000) ||
+			(phy_mode == QCA8075_PHY_PSGMII_FX100)) {
+		return QCA8075_PHY_MEDIUM_FIBER;
+
+	} else {
+		return QCA8075_PHY_MEDIUM_COPPER;
+	}
+}
+
 /* edma_get_settings()
  *	Get edma settings
  */
@@ -183,6 +270,7 @@
 			     struct ethtool_cmd *ecmd)
 {
 	struct edma_adapter *adapter = netdev_priv(netdev);
+	qca8075_phy_medium_t phy_medium;
 
 	if (adapter->poll_required) {
 		struct phy_device *phydev = NULL;
@@ -208,17 +296,29 @@
 		ecmd->phy_address = adapter->phy_mdio_addr;
 
 		phyreg = (uint16_t)phy_read(adapter->phydev, MII_LPA);
-		if (phyreg & LPA_10HALF)
-			ecmd->lp_advertising |= ADVERTISED_10baseT_Half;
-
-		if (phyreg & LPA_10FULL)
-			ecmd->lp_advertising |= ADVERTISED_10baseT_Full;
-
-		if (phyreg & LPA_100HALF)
-			ecmd->lp_advertising |= ADVERTISED_100baseT_Half;
-
-		if (phyreg & LPA_100FULL)
-			ecmd->lp_advertising |= ADVERTISED_100baseT_Full;
+		
+
+		phy_medium = __phy_active_medium_get(phydev->mdio.bus, COMBO_PHY_ID);
+		if (phy_medium != QCA8075_PHY_MEDIUM_FIBER) {
+			if (phyreg & LPA_10HALF)
+				ecmd->lp_advertising |= ADVERTISED_10baseT_Half;
+
+			if (phyreg & LPA_10FULL)
+				ecmd->lp_advertising |= ADVERTISED_10baseT_Full;
+
+			if (phyreg & LPA_100HALF)
+				ecmd->lp_advertising |= ADVERTISED_100baseT_Half;
+
+			if (phyreg & LPA_100FULL)
+				ecmd->lp_advertising |= ADVERTISED_100baseT_Full;
+		}
+		else {
+			if (phyreg & LPA_1000XHALF)
+				ecmd->lp_advertising |= ADVERTISED_1000baseT_Half;
+
+			if (phyreg & LPA_1000XFULL)
+				ecmd->lp_advertising |= ADVERTISED_1000baseT_Full;
+		}
 
 		phyreg = (uint16_t)phy_read(adapter->phydev, MII_STAT1000);
 		if (phyreg & LPA_1000HALF)
--- a/drivers/net/phy/ar40xx.c
+++ b/drivers/net/phy/ar40xx.c
@@ -1958,12 +1958,9 @@
 	return 0;
 }
 
-static int ar40xx_update_link(struct phy_device *phydev)
+static int ar40xx_update_link(struct phy_device *phydev, qca8075_phy_medium_t phy_medium)
 {
 	int status;
-	qca8075_phy_medium_t phy_medium;
-
-	phy_medium = __phy_active_medium_get(phydev->mdio.bus, COMBO_PHY_ID);
 
 	if (phydev->drv && phydev->drv->update_link)
 		return phydev->drv->update_link(phydev);
@@ -2055,9 +2052,12 @@
 	int lpagb = 0;
 	int common_adv;
 	int common_adv_gb = 0;
+	qca8075_phy_medium_t phy_medium;
+
+	phy_medium = __phy_active_medium_get(phydev->mdio.bus, COMBO_PHY_ID);
 
 	/* Update the link, but return if there was an error */
-	err = ar40xx_update_link(phydev);
+	err = ar40xx_update_link(phydev, phy_medium);
 	if (err)
 		return err;
 
@@ -2090,16 +2090,18 @@
 			return adv;
 
 		common_adv = lpa & adv;
+		if (phy_medium == QCA8075_PHY_MEDIUM_FIBER)
+			common_adv_gb = common_adv;
 
 		phydev->speed = SPEED_10;
 		phydev->duplex = DUPLEX_HALF;
 		phydev->pause = 0;
 		phydev->asym_pause = 0;
 
-		if (common_adv_gb & (LPA_1000FULL | LPA_1000HALF)) {
+		if (common_adv_gb & (LPA_1000FULL | LPA_1000HALF |  LPA_1000XFULL | LPA_1000XHALF)) {
 			phydev->speed = SPEED_1000;
 
-			if (common_adv_gb & LPA_1000FULL)
+			if (common_adv_gb & (LPA_1000FULL | LPA_1000XFULL))
 				phydev->duplex = DUPLEX_FULL;
 		} else if (common_adv & (LPA_100FULL | LPA_100HALF)) {
 			phydev->speed = SPEED_100;
